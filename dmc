#!/bin/sh
# dmc - dynamic mail client
# Copyleft 2009 -- pancake <at> nopcode <dot> org

VERSION="0.1"
COPYRIGHT="Copyleft -- pancake@nopcode.org"
HELP="Usage: dmc [-hv] [-e acc] [-a addr] [-m addr subj] [-A file] [-s msg] [action]"

[ -n "${EDITOR}" ] && EDITOR=vim
mkdir -p ~/.dmc/mail
mkdir -p ~/.dmc/tmp
mkdir -p ~/.dmc/acc
[ -e ~/.dmc/acc.default ] && . ~/.dmc/acc.default

acc_daemon () {
  LOCK=~/.dmc/tmp/${NAME}.lock
  INPUT=~/.dmc/tmp/${NAME}.input
  OUTPUT=~/.dmc/tmp/${NAME}.output

  echo "Starting $NAME account $PROTOCOL daemon..."

  rm -f "${LOCK}" "${INPUT}" "${OUTPUT}"
  mkfifo "${LOCK}" "${INPUT}"

  ( head -n 1 ${LOCK} ; dmc_cmd "login ${USER} ${PASS}" ) &
  (while : ; do cat ${INPUT} 2> /dev/null ; done) | \
    dmc-${PROTOCOL} ${HOST} ${PORT} ${SSL} 2> ${OUTPUT} > ${LOCK}
  rm -f "${LOCK}" "${INPUT}" "${OUTPUT}"
}

dmc_cmd () {
  echo "$@" > ~/.dmc/tmp/${NAME}.input
  head -n 1 ~/.dmc/tmp/${NAME}.lock > /dev/stderr
  cat ~/.dmc/tmp/${NAME}.output
}

start_account_daemons () {
  i=0
  for a in ~/.dmc/acc/* ; do
    ( . $a ; acc_daemon ) &
    i=$(($i+1))
    sleep 1
  done
  if [ "$i" = 0 ]; then
    echo "No accounts defined in ~/.dmc/acc"
    exit 1
  fi
}

print_account_template () {
  echo "NAME='test'"
  echo "SSL=0"
  echo "LIMIT=50 # get only 50 mails for each folder"
  echo "PROTOCOL='pop3' # imap4"
  echo "HOST=serverhost.com"
  echo "PORT=110"
  echo "#SEND=acc-name"
  echo "SEND=!msmtp"
  echo "MAIL=username@domain"
  echo "USER='username'"
  echo "PASS='password'"
}

edit_message () {
  OUTDIR=~/.dmc/box/${NAME}/out
  mkdir -p ${OUTDIR}
  OUT="`mktemp ${OUTDIR}/mail.XXXXXX`"
  echo "X-Mailer: dmc v${VERSION}" > $OUT
  echo "From: ${MAIL}" >> $OUT
  echo "To: ${TO}" >> $OUT
  echo "Subject: ${SUBJECT}" >> $OUT
  echo "" >> $OUT
  echo "" >> $OUT
  if [ -e ~/.dmc/box/${NAME}/signature ]; then
    echo "---" >> $OUT
    cat ~/.dmc/box/${NAME}/signature >> $OUT
  else
    if [ -e ~/.dmc/signature ]; then
      echo "---" >> $OUT
      cat ~/.dmc/signature >> $OUT
    fi
  fi
  ${EDITOR} ${OUT}
  if [ -z "`cat ${OUT}`" ]; then
    echo "Mail aborted"
    rm -f "${OUT}"
  else
    ln -fs "${OUT}" ~/.dmc/mail.last
  fi
}

add_attachment () {
  OUT="`readlink ~/.dmc/mail.last`"
  if [ -z "${OUT}" ]; then
    echo "No ~/.dmc/mail.last found. 'dmc -m' or manual symlink required."
  else
    mkdir -p "${OUT}.d"
    if [ -f "$1" ]; then
      FILE="`basename \"$1\"`"
      ln -fs "$1" "${OUT}.d/${FILE}"
    else
      echo "Cannot find \â…›$1\""
    fi
  fi
}

send_message () {
  FILE=$1
  if [ ! -e "${FILE}" ]; then
    echo "Cannot find '${FILE}'"
    exit 1
  fi
  # TODO: find better name for the auto mode
  if [ "${SEND}" = "!msmtp" ]; then
    TO="`dmc -H To < $FILE`"
    SJ="`dmc -H Subject < $FILE`"
    echo "Sending mail to $TO (${SJ})..."
#    HOST=`dmc-smtp ${TO}`
    msmtp "--user=${USER}" "--from=${MAIL}" $TO < ${FILE}
    return $?
  elif [ "`echo \"${SEND}\" | grep '|'`" ]; then
    echo "=> cat $1 ${SEND}"
    # TODO: setup environment for $TO $SUBJECT ...
    eval cat $1 ${SEND}
  else
    echo "SEND method '${SEND}' not supported"
  fi
  return 0
}

pull_mails () {
  echo "Pulling mails from account '${NAME}'"
  # This is pop3-only
  i=1
  while [ ! "$LIMIT" = "$i" ] ; do
    dmc -c cat $i > ~/.dmc/box/${NAME}/in/$i.eml 2> ~/.dmc/tmp/${NAME}.tmp
    if [ -n "`cat ~/.dmc/tmp/${NAME}.tmp | grep 'cat 0'`" ]; then
      rm -f ~/.dmc/box/${NAME}/in/$i.eml
      echo "EOF $i"
      cat ~/.dmc/tmp/${NAME}.tmp
      break
    else
      size=`du -hs ~/.dmc/box/${NAME}/in/$i.eml | awk '{print \$1}'`
      echo "got $i $size $(cat ~/.dmc/tmp/${NAME}.tmp)"
    fi
    i=$(($i+1))
  done
}

ign () { : ; }

case "$1" in
"start")
  start_account_daemons
  ;;
"stop")
  cd ~/.dmc/tmp
  for a in *.input ; do
    [ "$a" = "*.input" ] && break # XXX ugly hack
    file=`echo $a|cut -d '.' -f 1`
    echo Stopping $file daemon
    echo exit > $a &
    sleep 1
    rm -f ~/.dmc/tmp/$a
  done
  rm -f ~/.dmc/tmp/* 2> /dev/null
  pkill cat
  trap ign TERM
  pkill -TERM dmc
  ;;
"push")
  for a in ~/.dmc/acc/* ; do
    . $a
    if [ -d ~/.dmc/box/${NAME}/out ]; then
      for b in ~/.dmc/box/${NAME}/out/* ; do
        if [ -f "$b" ]; then
          send_message "$b"
          if [ $? = 0 ]; then
            echo "Mail sent. local copy moved to ~/.dmc/box/${NAME}/sent"
            mkdir -p ~/.dmc/box/${NAME}/sent
            mv $b ~/.dmc/box/${NAME}/sent
          else
            echo "There was an error while sending the mail"
          fi
        fi
      done
    fi
  done
  ;;
"pull")
  for a in ~/.dmc/acc/* ; do
    . $a
    mkdir -p ~/.dmc/box/${NAME}/in
    pull_mails
  done
  ;;
"-e"|"--edit")
  if [ -n "$2" ]; then
    [ -z "`cat ~/.dmc/acc/$2`" ] && \
      print_account_template "$2" > ~/.dmc/acc/$2
    ${EDITOR} ~/.dmc/acc/$2
    if [ -z "`cat ~/.dmc/acc/$2`" ]; then
      rm -f ~/.dmc/acc/$2
    else
      echo "The '$2' account is now the default"
      ln -fs ~/.dmc/acc/$2 ~/.dmc/acc.default
    fi
  else
    ls ~/.dmc/acc | cat
  fi
  ;;
"-H"|"--header")
  if [ -z "$2" ]; then
    echo "Usage: dmc -H [header] < mail"
  else
    grep -e : | grep -re "^$2:" | cut -d : -f 2- | sed 's, ,,'
  fi
  ;;
"-c"|"--cmd")
  if [ -z "$2" ]; then
    while : ; do
      printf "> "
      read A
      dmc_cmd "$A"
      [ "$A" = "exit" ] && exit 0
    done
  else
    shift
    dmc_cmd "$@"
  fi
  ;;
"-s"|"--send")
  shift
  for a in $* ; do
    send_message $a
  done
  ;;
"-m"|"--mail")
  TO="$2"
  SUBJECT="$3"
  edit_message
  ;;
"-A"|"--add-attachment")
  while [ -n "$2" ] ; do
    add_attachment $2
    shift
  done
  ;;
"-a"|"--addr")
  if [ -n "$2" ]; then
    while [ -n "$2" ] ; do
      grep -e "$2" ~/.dmc/addrbook
      shift
    done
  else
    ${EDITOR} ~/.dmc/addrbook
  fi
  ;;
"-v"|"--version")
  echo "dmc v${VERSION} ${COPYRIGHT}"
  ;;
"--help"|"-h")
  echo ${HELP}
  echo " -e account     edit account information"
  echo " -a name        show addressbook email for contact"
  echo " -A file        add attachment to mail"
  echo " -c cmd         run command for \$DMC_ACCOUNT or acc.default daemon"
  echo " -m addr subj   create mail with default account"
  echo " -H header      grep for header"
  echo " -s file        send email"
  echo " -v             show version"
  echo " -h             show this help message"
  echo " start          start mail daemons"
  echo " stop           stop them all"
  echo " push           send mails in box/*/out"
  echo " pull           update box/*/in folders"
  ;;
*)
  echo "${HELP}"
  ;;
esac

exit 0
